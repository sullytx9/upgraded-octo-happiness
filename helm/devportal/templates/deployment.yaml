apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/zone
                operator: In
                values:
                - {{ .Values.zone }}
      serviceAccountName: {{ .Values.serviceAccounts.k8s }}
      volumes:
        - name: drupal-web
          persistentVolumeClaim:
            claimName: drupal-web
        - name: devportal-secrets
          csi:
            driver: secrets-store-gke.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: devportal-secrets
      containers:
        - name: drupal
          image: {{ .Values.images.drupal }}
          imagePullPolicy: Always
          ports:
            - name: php-fpm
              containerPort: {{ .Values.services.drupal.port }}
          env:
            - name: DRUPAL_DATABASE_NAME
              value: 'ltcr-apigee-devportal'
            - name: DRUPAL_DATABASE_USER
              value: {{ trimSuffix ".gserviceaccount.com" .Values.serviceAccounts.iam }}
            - name: DRUPAL_DATABASE_HOST
              value: '127.0.0.1'
            - name: DRUPAL_DATABASE_PORT
              value: '5432'
            - name: DRUPAL_TRUSTED_HOST
              value: {{ .Values.services.domain }}
          volumeMounts:
            - mountPath: /opt/drupal/web
              name: drupal-web
            - mountPath: /var/secrets
              name: devportal-secrets
          resources:
            requests:
              memory: "4Gi"
        - name: nginx
          image: {{ .Values.images.nginx }}
          imagePullPolicy: Always
          ports:
            - name: https
              containerPort: {{ .Values.services.nginx.port }}
          readinessProbe:
            httpGet:
              path: /health-check
              port: {{ .Values.services.nginx.port }}
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
          volumeMounts:
            - mountPath: /opt/drupal/web
              name: drupal-web
              readOnly: true
      initContainers:
        - name: drupal-init
          image: {{ .Values.images.drupal }}
          imagePullPolicy: Always
          command: ['sh', '-c', 'cp -Rnp /opt/drupal/web/* /var/www/html/']
          volumeMounts:
            - mountPath: /var/www/html
              name: drupal-web
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            #fsGroup: 1001
        - name: cloud-sql-proxy
          restartPolicy: Always
          # It is recommended to use the latest version of the Cloud SQL Auth Proxy
          # Make sure to update on a regular schedule!
          image: {{ .Values.images.cloudSqlProxy }}
          args:
            # If connecting from a VPC-native GKE cluster, you can use the
            # following flag to have the proxy connect over private IP
            - "--private-ip"

            # If you are not connecting with Automatic IAM, you can delete
            # the following flag.
            - "--auto-iam-authn"

            # Enable structured logging with LogEntry format:
            - "--structured-logs"

            # Replace DB_PORT with the port the proxy should listen on
            - "--port=5432"
            - "{{ .Values.project }}:{{ .Values.region }}:{{ .Values.database.instance }}"

          securityContext:
            # The default Cloud SQL Auth Proxy image runs as the
            # "nonroot" user and group (uid: 65532) by default.
            runAsNonRoot: true
          # You should use resource requests/limits as a best practice to prevent
          # pods from consuming too many resources and affecting the execution of
          # other pods. You should adjust the following values based on what your
          # application needs. For details, see
          # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          resources:
            requests:
              # The proxy's memory use scales linearly with the number of active
              # connections. Fewer open connections will use less memory. Adjust
              # this value based on your application's requirements.
              memory: "2Gi"
              # The proxy's CPU use scales linearly with the amount of IO between
              # the database and the application. Adjust this value based on your
              # application's requirements.
              cpu: "1"
